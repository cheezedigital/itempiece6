<nav class="navbar navbar-default" id="local1" role="navigation">
  <a href="/library" class="library" style="color: #30d94c;">Library</a>
</nav>
<div class="container">
  <div class="github">
    <h4>all things github</h4>
    <p>
      i'll be installing github on a mac, so we'll be using the mac instructions.
    </p>
    <h4>github</h4>
      <p>Head over to <a href="https://github.com/" target="_blank">Github</a> and create a profile. add an avatar, or atleast i did, so just a suggestion.</p>
      <p>let's start out by opening the terminal applicaiton and typing <code>$ git config --global user.name "YOUR NAME"</code> with your name
      actually being your name. by doing this, we're actually telling git (locally) we say who we say we are.
    </p>
      <p>next: config email address so git knows which email is associated with commits.</p>
      <p><code>$ git config --global user.email "YOUR EMAIL ADDRESS"</code></p>
        <h4>setting up your ssh keys</h4>
      <p>ssh keys are a way to identify trusted computers.</p><br />
      <p>to find out other than your github settings if ssh keys are established, open the terminal, and
        at the root path, which on the local is <strong>~$</strong> and type ls -la. should display all directories on the local.
        you'll notice the .ssh. either change directories into .ssh, or open via an editor.
      </p>
      <p>
        to generate an ssh key, open up the terminal. again, the terminal should now be saved to the dock, and type
        in <code>ssh-keygen -t rsa -C "your_email@example.com"</code> press enter. next, you'll be asked to enter a
        passphrase. make it unique, please, and don't forget it. the output generated should be a key fingerprint. then add the new
        key to the ssh-agent by typing <code>$ eval "$(ssh-agent -s)"</code>, then <code>$ ssh-add ~/.ssh/id_rsa</code>
      </p>
      <h4>adding ssh keys to your account</h4>
      <p>
        run the folling command to copy the key to your clipboard. keep in mind, your key may also be named
        <code>id_dsa.pub</code>, <code>id_ecdsa.pub</code>, or <code>id_ed25519.pub</code>. run this command
        <code>$ pbcopy < ~/.ssh/id_rsa.pub</code>
      </p>
      <p>
        cool, so the key is copied, now it's time to add to github. head back over to github, and click the gear cog in the upper <i class="fa fa-cogs"></i>
        right-hand corner. furthermore, it's only one gear on github, though. please take note.
      </p>
      <p>
        in the user settings sidebar, click add <strong>SSH Keys</strong>. had a description. like, i'm using three different machines, therefore,
        three ssh keys are established. moreover, naming convention is important. again, take note. paste the newly established ssh key. finally, a green
        button to add ssh key. click that joint. confirm by entering github password.
      </p>
        <h4>test out the new ssh key:</h4>
      <p>
        type in terminal: <code>$ ssh -T git@github.com</code>. may see # Are you sure you want to continue connecting (yes/no)?
        don't worry. type "yes". github is now configured. create. push. pull. branch. social coding is amazing, really.
      </p>
      <p>
        i'll pick up where i left off for pushing, initalizing a repo, and pushing remotely once the machine is fully configured, as
        we need to install heroku, and actually write our first program. stay tuned.
      </p>
  </div>
</div>
